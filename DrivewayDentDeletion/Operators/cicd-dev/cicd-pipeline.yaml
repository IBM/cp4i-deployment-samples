apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: dev-pipeline
spec:
  params:
    - name: imageTag
      type: string
      description: The image tag
  tasks:
    - name: build-git-source-image
      taskRef:
        name: demos-build-git-source-image

    - name: build-buildah-image
      taskRef:
        name: demos-build-buildah-image
      runAfter:
        - build-git-source-image

    - name: build-command-image
      taskRef:
        name: demos-build-command-image
      runAfter:
        - build-git-source-image

    # MQ build in dev namespace
    - name: build-mq
      taskRef:
        name: build-task
      runAfter:
        - build-buildah-image
      params:
        - name: imageName
          value: "mq-ddd"
        - name: imageTag
          value: "latest"
        - name: dockerfile
          value: "MQ.Dockerfile"
        - name: contextPath
          value: ""
        - name: pvc
          value: "buildah-mq"

    # MQ deploy in dev namesapce
    - name: deploy-wait-mq
      runAfter:
        - build-mq
        - build-command-image
      taskRef:
        name: deploy-task
      params:
        - name: imageTag
          value: "latest"
        - name: imageName
          value: "mq-ddd"
        - name: releaseName
          value: "mq-ddd-qm-dev"
        - name: releaseScript
          value: release-mq.sh
        - name: namespace
          value: "{{NAMESPACE}}"

    # build all ace in dev namespace
    - name: build-ace-int-server-ace-api
      taskRef:
        name: build-task
      runAfter:
        - build-buildah-image
      params:
        - name: imageTag
          value: "$(params.imageTag)"
        - name: imageName
          value: "ddd-ace-api"
        - name: dockerfile
          value: "ACE-API.Dockerfile"
        - name: contextPath
          value: "Bar_files/ace-api"
        - name: pvc
          value: "buildah-ace-api"

    - name: build-ace-int-server-ace-acme
      taskRef:
        name: build-task
      runAfter:
        - build-buildah-image
      params:
        - name: imageTag
          value: "$(params.imageTag)"
        - name: imageName
          value: "ddd-ace-acme"
        - name: dockerfile
          value: "ACE-Acme.Dockerfile"
        - name: contextPath
          value: "Bar_files/ace-acme"
        - name: pvc
          value: "buildah-ace-acme"

    - name: build-ace-int-server-ace-bernie
      taskRef:
        name: build-task
      runAfter:
        - build-buildah-image
      params:
        - name: imageTag
          value: "$(params.imageTag)"
        - name: imageName
          value: "ddd-ace-bernie"
        - name: dockerfile
          value: "ACE-Bernie.Dockerfile"
        - name: contextPath
          value: "Bar_files/ace-bernie"
        - name: pvc
          value: "buildah-ace-bernie"

    - name: build-ace-int-server-ace-chris
      taskRef:
        name: build-task
      runAfter:
        - build-buildah-image
      params:
        - name: imageTag
          value: "$(params.imageTag)"
        - name: imageName
          value: "ddd-ace-chris"
        - name: dockerfile
          value: "ACE-Chris.Dockerfile"
        - name: contextPath
          value: "Bar_files/ace-chris"
        - name: pvc
          value: "buildah-ace-chris"

    # deploy all ace in dev namespace
    - name: deploy-wait-ace-api
      runAfter:
        - build-ace-int-server-ace-api
        - build-command-image
      taskRef:
        name: deploy-task
      params:
        - name: imageTag
          value: "$(params.imageTag)"
        - name: imageName
          value: "ddd-ace-api"
        - name: releaseName
          value: "ddd-dev-ace-api"
        - name: releaseScript
          value: release-ace-integration-server.sh
        - name: namespace
          value: "{{NAMESPACE}}"
        - name: acePolicyProjectParam
          value: "-d policyproject-ddd-dev"

    - name: deploy-wait-ace-bernie
      runAfter:
        - build-ace-int-server-ace-bernie
        - build-command-image
      taskRef:
        name: deploy-task
      params:
        - name: imageTag
          value: "$(params.imageTag)"
        - name: imageName
          value: "ddd-ace-bernie"
        - name: releaseName
          value: "ddd-dev-ace-bernie"
        - name: releaseScript
          value: release-ace-integration-server.sh
        - name: namespace
          value: "{{NAMESPACE}}"
        - name: acePolicyProjectParam
          value: "-d policyproject-ddd-dev"

    - name: deploy-wait-ace-acme
      runAfter:
        - build-ace-int-server-ace-acme
        - build-command-image
      taskRef:
        name: deploy-task
      params:
        - name: imageTag
          value: "$(params.imageTag)"
        - name: imageName
          value: "ddd-ace-acme"
        - name: releaseName
          value: "ddd-dev-ace-acme"
        - name: releaseScript
          value: release-ace-integration-server.sh
        - name: namespace
          value: "{{NAMESPACE}}"
        - name: acePolicyProjectParam
          value: "-d policyproject-ddd-dev"

    - name: deploy-wait-ace-chris
      runAfter:
        - build-ace-int-server-ace-chris
        - build-command-image
      taskRef:
        name: deploy-task
      params:
        - name: imageTag
          value: "$(params.imageTag)"
        - name: imageName
          value: "ddd-ace-chris"
        - name: releaseName
          value: "ddd-dev-ace-chris"
        - name: releaseScript
          value: release-ace-integration-server.sh
        - name: namespace
          value: "{{NAMESPACE}}"
        - name: acePolicyProjectParam
          value: "-d policyproject-ddd-dev"
